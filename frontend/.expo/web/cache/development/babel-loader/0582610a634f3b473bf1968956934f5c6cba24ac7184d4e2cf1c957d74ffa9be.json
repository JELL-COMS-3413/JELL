{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles/styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddBudgetItemModal(_ref) {\n  var onAddItem = _ref.onAddItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    title = _useState4[0],\n    setTitle = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    value = _useState6[0],\n    setValue = _useState6[1];\n  var handlePress = function handlePress() {\n    if (title.trim() && value.trim()) {\n      onAddItem({\n        title: title.trim(),\n        value: value.trim()\n      });\n      setTitle(\"\");\n      setValue(\"\");\n      setModalVisible(false);\n    } else {\n      alert(\"Please enter a title and value\");\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \" + \"\n      })\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Add Item\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Enter title for budget item\",\n            value: title,\n            onChangeText: function onChangeText(text) {\n              return setTitle(text);\n            }\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Enter amount to allocate to budget item\",\n            value: value,\n            onChangeText: function onChangeText(text) {\n              return setValue(text);\n            }\n          }), _jsxs(View, {\n            style: styles.buttonContainer,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.button, styles.successButton],\n              onPress: handlePress,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Add\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.button, styles.cancelButton],\n              onPress: function onPress() {\n                return setModalVisible(false);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Modal","Text","TextInput","View","TouchableOpacity","styles","jsx","_jsx","jsxs","_jsxs","AddBudgetItemModal","_ref","onAddItem","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","title","setTitle","_useState5","_useState6","value","setValue","handlePress","trim","alert","children","style","addButton","onPress","addButtonText","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","input","placeholder","onChangeText","text","buttonContainer","button","successButton","buttonText","cancelButton"],"sources":["C:/Users/lisse/Documents/GitHub/JELL/frontend/Components/AddBudgetItemModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Text, TextInput, View, TouchableOpacity } from \"react-native\";\r\n\r\nimport styles from \"./styles/styles\";\r\n\r\nexport default function AddBudgetItemModal({ onAddItem }) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handlePress = () => {\r\n    if (title.trim() && value.trim()) {\r\n      onAddItem({ title: title.trim(), value: value.trim() });\r\n      setTitle(\"\");\r\n      setValue(\"\");\r\n      setModalVisible(false);\r\n    } else {\r\n      alert(\"Please enter a title and value\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity\r\n        style={styles.addButton}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Text style={styles.addButtonText}> + </Text>\r\n      </TouchableOpacity>\r\n      <Modal\r\n        visible={modalVisible}\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Add Item</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter title for budget item\"\r\n              value={title}\r\n              onChangeText={(text) => setTitle(text)}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter amount to allocate to budget item\"\r\n              value={value}\r\n              onChangeText={(text) => setValue(text)}\r\n            />\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity\r\n                style={[styles.button, styles.successButton]}\r\n                onPress={handlePress}\r\n              >\r\n                <Text style={styles.buttonText}>Add</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[styles.button, styles.cancelButton]}\r\n                onPress={() => setModalVisible(false)}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}